# -*- mode: Python -*-
# -*- mode: Python -*-
k8s_yaml(helm('./src/main/kubernetes/helms/postgresql',name='postgresql', namespace='default'))
k8s_yaml(helm('./src/main/kubernetes/helms/kube-state-metrics',name='kube-state-metrics', namespace='default'))
k8s_yaml(helm('./src/main/kubernetes/helms/prometheus',name='prometheus', namespace='default'))
k8s_yaml(helm('./src/main/kubernetes/helms/grafana',name='grafana', namespace='default'))
k8s_yaml(['./src/main/kubernetes/helms/grafana/datasource.yaml', './src/main/kubernetes/helms/grafana/dashboard_app.yaml',
          './src/main/kubernetes/helms/grafana/dashboard_quarkus.yaml'])
custom_build(
  'quarkus-todo-image',
  deps=['./src','./pom.xml'],
  command='buildah bud -t $EXPECTED_REF -f ./src/main/docker/Dockerfile . && buildah push $EXPECTED_REF $EXPECTED_REF',
  skips_local_docker = True,
  live_update = [sync('./src/', '/project/src'),
                 sync('./src/pom.xml', '/project/pom.xml')
  ],
  entrypoint = 'mvn quarkus:dev')

k8s_yaml('src/main/kubernetes/app.yml')
k8s_resource('prometheus-server', port_forwards=[9090], resource_deps=['kube-state-metrics'])
k8s_resource('grafana', port_forwards=[3000])
k8s_resource('postgresql', port_forwards=[5432])
k8s_resource('quarkus-todo-demo', port_forwards=[8080,5005])



k8s_yaml(helm('./src/main/kubernetes/helms/postgresql',name='postgresql', namespace='default'))



k8s_yaml('src/main/kubernetes/app.yaml')
k8s_resource('postgresql', port_forwards=[5432])
k8s_resource('quarkus-todo-demo', port_forwards=[8080,5005],
                                  resource_deps=['postgresql'])

